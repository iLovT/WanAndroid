package com.jzh.wanandroid.data.db.model;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jzh.wanandroid.data.db.model.ProjectTypeResponseData;
import com.jzh.wanandroid.data.db.model.KnowledgeResponseData;
import com.jzh.wanandroid.data.db.model.NavigationResponseData;

import com.jzh.wanandroid.data.db.model.ProjectTypeResponseDataDao;
import com.jzh.wanandroid.data.db.model.KnowledgeResponseDataDao;
import com.jzh.wanandroid.data.db.model.NavigationResponseDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig projectTypeResponseDataDaoConfig;
    private final DaoConfig knowledgeResponseDataDaoConfig;
    private final DaoConfig navigationResponseDataDaoConfig;

    private final ProjectTypeResponseDataDao projectTypeResponseDataDao;
    private final KnowledgeResponseDataDao knowledgeResponseDataDao;
    private final NavigationResponseDataDao navigationResponseDataDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        projectTypeResponseDataDaoConfig = daoConfigMap.get(ProjectTypeResponseDataDao.class).clone();
        projectTypeResponseDataDaoConfig.initIdentityScope(type);

        knowledgeResponseDataDaoConfig = daoConfigMap.get(KnowledgeResponseDataDao.class).clone();
        knowledgeResponseDataDaoConfig.initIdentityScope(type);

        navigationResponseDataDaoConfig = daoConfigMap.get(NavigationResponseDataDao.class).clone();
        navigationResponseDataDaoConfig.initIdentityScope(type);

        projectTypeResponseDataDao = new ProjectTypeResponseDataDao(projectTypeResponseDataDaoConfig, this);
        knowledgeResponseDataDao = new KnowledgeResponseDataDao(knowledgeResponseDataDaoConfig, this);
        navigationResponseDataDao = new NavigationResponseDataDao(navigationResponseDataDaoConfig, this);

        registerDao(ProjectTypeResponseData.class, projectTypeResponseDataDao);
        registerDao(KnowledgeResponseData.class, knowledgeResponseDataDao);
        registerDao(NavigationResponseData.class, navigationResponseDataDao);
    }
    
    public void clear() {
        projectTypeResponseDataDaoConfig.clearIdentityScope();
        knowledgeResponseDataDaoConfig.clearIdentityScope();
        navigationResponseDataDaoConfig.clearIdentityScope();
    }

    public ProjectTypeResponseDataDao getProjectTypeResponseDataDao() {
        return projectTypeResponseDataDao;
    }

    public KnowledgeResponseDataDao getKnowledgeResponseDataDao() {
        return knowledgeResponseDataDao;
    }

    public NavigationResponseDataDao getNavigationResponseDataDao() {
        return navigationResponseDataDao;
    }

}
